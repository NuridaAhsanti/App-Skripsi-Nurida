/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package contohkoneksi;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author nury
 */
public class KelolaApp extends javax.swing.JFrame {

    public TblData dat = null;
    private JFileChooser jfc;
    private File file;
    private String[] Kata;
    private String str;
    private String sCurrentLine;
    int k = 0;
    private tutorialKoneksi connection = new tutorialKoneksi();

    /**
     * Creates new form KelolaApp
     */
    public KelolaApp() {
        initComponents();
        
        setExtendedState(JFrame.MAXIMIZED_HORIZ); 
        setVisible(true);
        setResizable(false);
        autonomor();
    }

      /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LblFoto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NamaAppKel1 = new javax.swing.JLabel();
        NamaAppKel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        KonstAppKel = new javax.swing.JLabel();
        TipeAppKel = new javax.swing.JLabel();
        VarAppKel = new javax.swing.JLabel();
        BtnSimpan = new javax.swing.JButton();
        SoalAppKel = new javax.swing.JLabel();
        TAKel = new java.awt.TextArea();
        TFno = new javax.swing.JTextField();
        TFNamaKel = new javax.swing.JTextField();
        TFKonstKel = new javax.swing.JTextField();
        TFTipeKel = new javax.swing.JTextField();
        TFVarKel = new javax.swing.JTextField();
        BtnImage = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        CBKelas = new javax.swing.JComboBox();
        BtnEdit = new javax.swing.JButton();
        BtnBatal = new javax.swing.JButton();
        BtnHapus = new javax.swing.JButton();
        BtnData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(750, 550));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setText("Kelola Soal & Jawaban");

        LblFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contohkoneksi/blank.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel2.setText("Identitas Jawaban");

        NamaAppKel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        NamaAppKel1.setText("ID");

        NamaAppKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        NamaAppKel.setText("Nama Program");

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setText("Deklarasi");

        KonstAppKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        KonstAppKel.setText("Konstanta");

        TipeAppKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TipeAppKel.setText("Tipe Data");

        VarAppKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        VarAppKel.setText("Variabel");

        BtnSimpan.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        BtnSimpan.setText("Simpan");
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });

        SoalAppKel.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        SoalAppKel.setText("Soal Algoritma");

        TAKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TAKel.setName(""); // NOI18N
        TAKel.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                TAKelTextValueChanged(evt);
            }
        });
        TAKel.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                TAKelInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        TFno.setEditable(false);
        TFno.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TFno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFnoActionPerformed(evt);
            }
        });

        TFNamaKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TFNamaKel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFNamaKelActionPerformed(evt);
            }
        });

        TFKonstKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TFKonstKel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFKonstKelActionPerformed(evt);
            }
        });

        TFTipeKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TFTipeKel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFTipeKelActionPerformed(evt);
            }
        });

        TFVarKel.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        TFVarKel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFVarKelActionPerformed(evt);
            }
        });

        BtnImage.setText("Browse Img");
        BtnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnImageActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        jLabel5.setText("Klasifikasi");

        CBKelas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Runtunan", "Pemilihan", "Pengulangan" }));
        CBKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBKelasActionPerformed(evt);
            }
        });

        BtnEdit.setText("Edit");
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });

        BtnBatal.setText("Batal");
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });

        BtnHapus.setText("Hapus");
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });

        BtnData.setText("Lihat Data");
        BtnData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SoalAppKel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnImage))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(BtnData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(BtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(BtnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(BtnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jLabel1)
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TAKel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 369, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(NamaAppKel)
                                        .addComponent(NamaAppKel1))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(TFno, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(TFNamaKel, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TipeAppKel)
                                        .addComponent(KonstAppKel)
                                        .addComponent(VarAppKel))
                                    .addGap(31, 31, 31)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TFKonstKel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TFTipeKel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TFVarKel, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(CBKelas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel2)))))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BtnImage)
                                .addGap(212, 212, 212))
                            .addComponent(LblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(SoalAppKel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NamaAppKel1)
                            .addComponent(TFno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NamaAppKel)
                            .addComponent(TFNamaKel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(CBKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFKonstKel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KonstAppKel))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TipeAppKel)
                            .addComponent(TFTipeKel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VarAppKel)
                            .addComponent(TFVarKel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)))
                .addComponent(TAKel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnHapus)
                    .addComponent(BtnSimpan)
                    .addComponent(BtnEdit)
                    .addComponent(BtnBatal)
                    .addComponent(BtnData))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void autonomor(){
     String sql = "select max(autoid) from appdb";
     try{
         Statement statement = connection.getKoneksi().createStatement();
         ResultSet resultset = statement.executeQuery(sql);
         while (resultset.next()){
             int nmr = resultset.getInt(1);
             TFno.setText(""+ Integer.toString(nmr+1));
         }
     }catch (Exception e){
         System.out.println(""+ e.getMessage());
     }
 }
 
 public void tokenisasi(){
      String Kalimat;
        Kalimat = TAKel.getText().toLowerCase()
        .replace("!", " ").replace("@", " ").replace("#", " ")
        .replace("$", " ").replace("%", " ").replace("^", " ")
        .replace("&", " ").replace("*", " ").replace("(", " ")
        .replace(")", " ").replace("-", " ").replace("_", " ")
        .replace("=", " ").replace("+", " ").replace("{", " ")
        .replace("[", " ").replace("}", " ").replace("]", " ")
        .replace(";", " ").replace(":", " ").replace("'", " ")
        .replace(",", " ").replace("<", " ").replace(".", " ")
        .replace(">", " ").replace("/", " ").replace("?", " ")
        .replace("~", " ").replace("`", " ")
        .replaceAll("0", " ").replaceAll("1", " ")
        .replaceAll("2", " ").replaceAll("3", " ")
        .replaceAll("4", " ").replaceAll("5", " ")
        .replaceAll("6", " ").replaceAll("7", " ")
        .replaceAll("8", " ").replaceAll("9", " ")
        .replaceAll("\\n+", " ").replaceAll("\\s+", " ").replaceAll("\\t+", " ");
     Kata = Kalimat.split(" ");
 }
 
 public String filterInsert(String str) throws SQLException{
     ArrayList<String> wordsList = new ArrayList<>();
     String[] stopwords = new String[2000];
     FileReader fr = null;
     try {
     fr = new FileReader("D:\\stopwords_id.txt");
     } catch (FileNotFoundException ex) {
         Logger.getLogger(KelolaApp.class.getName()).log(Level.SEVERE, null, ex);
     }
     BufferedReader br= new BufferedReader(fr);
     try {
         while ((sCurrentLine = br.readLine()) != null){
             stopwords[k]=sCurrentLine;
             k++;
         }
     } catch (IOException ex) {
         Logger.getLogger(KelolaApp.class.getName()).log(Level.SEVERE, null, ex);
     }
        
     wordsList.addAll(Arrays.asList(Kata));
     for(int i = 0; i < wordsList.size(); i++){
         for(int j = 0; j < k; j++){
             if(wordsList.contains(stopwords[j])){
                  wordsList.remove(stopwords[j]);
             }
         }
     }
     
     StringBuilder buffer = new StringBuilder();
         boolean processedFirst = false;
         for (String word : wordsList) {
             if(processedFirst) {
                 buffer.append(" ");
             }
             buffer.append(this.Stemming(word));
             processedFirst = true;
         }
         String firstParam = buffer.toString();
         String query1 = "ALTER TABLE appdb AUTO_INCREMENT = 1";
         PreparedStatement preparedStmt1 = connection.getKoneksi().prepareStatement(query1);
         preparedStmt1.executeUpdate();
         
         String nama = TFNamaKel.getText();
         String kelas = CBKelas.getSelectedItem().toString();
         String konst = TFKonstKel.getText();
         String tipe = TFTipeKel.getText();
         String var = TFVarKel.getText();
         String soal = TAKel.getText();
         String foto = LblFoto.getIcon().toString();
         String query = " insert into appdb(nama, kelas, konst, tipe, var, kata, soal, foto) values(?,?,?,?,?,?,?,?)";
         PreparedStatement preparedStmt = connection.getKoneksi().prepareStatement(query);
         preparedStmt.setString(1,nama);
         preparedStmt.setString(2,kelas);
         preparedStmt.setString(3,konst);
         preparedStmt.setString(4,tipe);
         preparedStmt.setString(5,var);
         preparedStmt.setString(6,firstParam);
         preparedStmt.setString(7,soal);
         preparedStmt.setString(8, foto);
         preparedStmt.executeUpdate();
     return str;
 }
 
 public String filterEdit(String str) throws SQLException{
     ArrayList<String> wordsList = new ArrayList<>();
     String[] stopwords = new String[2000];
     FileReader fr = null;
     try {
         fr = new FileReader("D:\\stopwords_id.txt");
     } catch (FileNotFoundException ex) {
         Logger.getLogger(KelolaApp.class.getName()).log(Level.SEVERE, null, ex);
     }
     
     BufferedReader br= new BufferedReader(fr);
     try {
         while ((sCurrentLine = br.readLine()) != null){
             stopwords[k]=sCurrentLine;
             k++;
         }
     } catch (IOException ex) {
         Logger.getLogger(KelolaApp.class.getName()).log(Level.SEVERE, null, ex);
     }
     
     wordsList.addAll(Arrays.asList(Kata));
     for(int i = 0; i < wordsList.size(); i++){
         for(int j = 0; j < k; j++){
             if(wordsList.contains(stopwords[j])){
                  wordsList.remove(stopwords[j]);
             }
         }
     }
     StringBuilder buffer = new StringBuilder();
         boolean processedFirst = false;
        
         for (Iterator<String> it = wordsList.iterator(); it.hasNext();) {
             str = it.next();
             if(processedFirst) {
                 buffer.append(" ");
             }
             buffer.append(this.Stemming(str));
             processedFirst = true;
         }
         String firstParam = buffer.toString();
         
         String id = TFno.getText();
         String nama = TFNamaKel.getText();
         String kelas = CBKelas.getSelectedItem().toString();
         String konst = TFKonstKel.getText();
         String tipe = TFTipeKel.getText();
         String var = TFVarKel.getText();
         String soal = TAKel.getText();
         String foto = LblFoto.getIcon().toString();
         String query2 = "UPDATE appdb SET nama = ?, kelas = ?, konst = ?, tipe =?, var = ?, kata = ?, soal = ?, foto = ? where autoid = ?";
         PreparedStatement preparedStmt = connection.getKoneksi().prepareStatement(query2);
         preparedStmt.setString(1,nama);
         preparedStmt.setString(2,kelas);
         preparedStmt.setString(3,konst);
         preparedStmt.setString(4,tipe);
         preparedStmt.setString(5,var);
         preparedStmt.setString(6,firstParam);
         preparedStmt.setString(7,soal);
         preparedStmt.setString(8,foto);
         preparedStmt.setString(9,id);
         preparedStmt.executeUpdate();
     return str;
 }
 
 //cek kata di db
 private boolean cek(String str) throws SQLException{
     String sql = "select * from tb_katadasar where katadasar='"+ str +"'";
     Statement st = connection.getKoneksi().createStatement();
     ResultSet rs = st.executeQuery(sql);
     while(rs.next()){
         String hsl = rs.getString("katadasar");
         System.out.print(hsl+" ");
         return true;
     }
     return false;
 }
 
 //langkah 1 - hapus partikel
private String hapusPartikel(String str) throws SQLException{
    if(this.cek(str)==false){
        if(str.matches("(\\w+)(lah|kah|tah|pun)")){
            if (str.endsWith("lah") || str.endsWith("kah") || str.endsWith("tah") || str.endsWith("pun")) {
                str = str.substring(0, str.length() - 3);
            }
        }
    }
    return str;
}

//langkah 2 - hapus possesive pronoun
private String hapusPossesivePronoun(String str) throws SQLException{
    if(this.cek(str)==false){
        if(str.matches("(\\w+)(ku|mu|nya)")){
            if(str.endsWith("ku") || str.endsWith("mu")){
            }else if(str.endsWith("nya")){
             str = str.substring(0, str.length() - 3);
            }
        }
    }
    return str;
}

//langkah 3 hapus first order prefiks (awalan pertama)
private String hapusFirstOrderPrefiks(String str) throws SQLException{
    if(this.cek(str)==false){
        if(str.matches("(meng|meny|men|mem|me|peng|peny|pen|pem|di|ter|ke)(\\w+)")){
            String n = str.substring(0,4);
            String m = str.substring(4,5);
            String o = str.substring(0,3);
            String p = str.substring(3,4);
            String q = str.substring(0,2);
            String DP;
            if("meng".equals(n)){
                if("a".equals(m)||"i".equals(m)||"u".equals(m)||"e".equals(m)||"o".equals(m)){
                    DP = str.replace(n, "k");
                    return DP;
                }else{
                    DP = str.replace(n, "");
                    return DP;
                }
            }

            else if("meny".equals(n)){
                DP = str.replace(n, "s");
                return DP;
            }

            else if("men".equals(o)){
                DP = str.replace(o, "t");
                if(cek(DP)==true){
                    return DP;
                }else{
                    DP = str.replace(o, "");
                    return DP;
                }
            }

            else if("mem".equals(o)){
                if("a".equals(p)||"i".equals(p)||"u".equals(p)||"e".equals(p)||"o".equals(p)){
                    DP = str.replace(o, "p");
                    return DP;
                }else{
                    DP = str.replace(o, "");
                    return DP;
                }
            }

            else if("me".equals(q)){
                DP = str.replace(q, "");
                return DP;
            }

            else if("peng".equals(n)){
                if("e".equals(m)||"a".equals(m)){
                    DP = str.replace(m, "k");
                    return DP;
                }else{
                     DP = str.replace(n, "");	
                     return DP;
                }
            }

            else if("peny".equals(n)){
                DP = str.replace(n, "s");
                return DP;
            }

            else if("pen".equals(o)){
                 if("a".equals(p)||"i".equals(p)||"u".equals(p)||"e".equals(p)||"o".equals(p)){
                     DP = str.replace(o, "t");
                     return DP;
                 }else{
                     DP = str.replace(o, "");
                     return DP;
                 }
            }

            else if("pem".equals(o)){
                if("a".equals(p)||"i".equals(p)||"u".equals(p)||"e".equals(p)||"o".equals(p)){
                    DP = str.replace(o, "p");
                }else{
                    DP = str.replace(o, "");
                    return DP;
                }
            }

            else if("di".equals(q)){
                DP = str.replace(q, "");
                return DP;
            }

            else if("ter".equals(o)){
                DP = str.replace(o, "");
                return DP;
            }

            else if("ke".equals(q)){
                 DP = str.replace(q, "");
                 return DP;
            }
        }
    }
    return str;
}

//langkah 4 hapus second order prefiks (awalan kedua)
private String hapusSecondOrderPrefiks(String str) throws SQLException{
    if(this.cek(str)==false){
        if(str.matches("(ber|bel|be|per|pe|pel|se)(\\w+)")){
            String o = str.substring(0,3);
            String q = str.substring(0,2);
            String DP2;
            if("ber".equals(o)){
                DP2 = str.replace(o, "");
                return DP2;
            }

            else if("bel".equals(o)){
                DP2 = str.replace(o, "");
                return DP2;
            }

            else if("be".equals(q)){
                DP2 = str.replace(q, "");
                return DP2;
            }

            else if("per".equals(o) && str.length() > 5){
                DP2 = str.replace(o, "");
                return DP2;
            }

            else if("pe".equals(q) && str.length() > 5){
                DP2 = str.replace(q, "");
                return DP2;
            }

            else if("pel".equals(o) && str.length() > 5){
                DP2 = str.replace(o, "");
                return DP2;
            }

            else if("se".equals(q) && str.length() > 5){
                DP2 = str.replace(q, "");
                return DP2;
            }
        }
    }
    return str;
}

//langkah 5 hapus suffiks
private String hapusSuffiks(String str) throws SQLException{
    if(this.cek(str)==false){
        if(str.endsWith("kan")){
            str = str.substring(0, str.length() - 3);
        }else if(str.endsWith("i")){
            str = str.substring(0, str.length() - 1);
        }else if(str.endsWith("an")){
            str = str.substring(0, str.length() - 2);
        }
    }
    return str;
}
 
 //6. Pemanggilan Stemming
 private String Stemming(String str) throws SQLException{
     if(cek(str)==true){
         return str;
     }else{
        str = hapusPartikel(str);
        str = hapusPossesivePronoun(hapusPartikel(str));
        if(cek(hapusFirstOrderPrefiks(hapusPossesivePronoun(hapusPartikel(str))))==false){
            str = hapusSuffiks(hapusSecondOrderPrefiks(hapusFirstOrderPrefiks(hapusPossesivePronoun(hapusPartikel(str)))));
        }else if(cek(hapusFirstOrderPrefiks(hapusPossesivePronoun(hapusPartikel(str))))==true){
            str = hapusSecondOrderPrefiks(hapusSuffiks(hapusFirstOrderPrefiks(hapusPossesivePronoun(hapusPartikel(str)))));
        }
     }
     return str;
 }
 
    private void TFVarKelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFVarKelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFVarKelActionPerformed

    private void TFTipeKelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFTipeKelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFTipeKelActionPerformed

    private void TFNamaKelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFNamaKelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFNamaKelActionPerformed

    private void TFKonstKelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFKonstKelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFKonstKelActionPerformed

    private void TAKelTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_TAKelTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TAKelTextValueChanged

    private void TAKelInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TAKelInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TAKelInputMethodTextChanged

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        try {
            this.tokenisasi();
            this.filterInsert(str);
            JOptionPane.showMessageDialog(null,"Data disimpan!");
            new KelolaApp().show();
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(KelolaApp.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void TFnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFnoActionPerformed

    private void BtnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnImageActionPerformed
        jfc=new JFileChooser();
        if(jfc.showOpenDialog(LblFoto)==JFileChooser.APPROVE_OPTION){
            
            Toolkit toolkit=Toolkit.getDefaultToolkit();
            Image img=toolkit.getImage(jfc.getSelectedFile().getAbsolutePath());
            Image imagedResized=img.getScaledInstance(200, 250, Image.SCALE_DEFAULT);
            ImageIcon imageIcon=new ImageIcon(imagedResized);
            
            LblFoto.setIcon(imageIcon);
            //TFjudul.setText(jfc.getSelectedFile().getName());
            file=new File(jfc.getSelectedFile().getPath()); // file untuk dikopi
        }
    }//GEN-LAST:event_BtnImageActionPerformed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        try {
            this.tokenisasi();
            this.filterEdit(str);
            JOptionPane.showMessageDialog(null,"Perubahan Sukses!");
            new KelolaApp().show();
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(KelolaApp.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        autonomor();
        TFNamaKel.setText("");
        TFKonstKel.setText("");
        TFTipeKel.setText("");
        TFVarKel.setText("");
        LblFoto.setIcon(null);
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        int konf = JOptionPane.showConfirmDialog(null,"Apakah Yakin Menghapus data ini?", "Confirmation",JOptionPane.YES_NO_CANCEL_OPTION);
        if(konf==0){
            try{
                String sql="delete from appdb where autoid='"+ TFno.getText() +"'";
                PreparedStatement preparedStmt = connection.getKoneksi().prepareStatement(sql);
                preparedStmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Hapus Data Sukses!");
                TFNamaKel.setText("");
                TFKonstKel.setText("");
                TFTipeKel.setText("");
                TFVarKel.setText("");
                TAKel.setText("");
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null, "Hapus Data Gagal!");
            }
        }
    }//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDataActionPerformed
        // TODO add your handling code here:
        new TblData().show();
        this.dispose();
    }//GEN-LAST:event_BtnDataActionPerformed

    private void CBKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBKelasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBKelasActionPerformed

    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new KelolaApp().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBatal;
    private javax.swing.JButton BtnData;
    private javax.swing.JButton BtnEdit;
    private javax.swing.JButton BtnHapus;
    private javax.swing.JButton BtnImage;
    private javax.swing.JButton BtnSimpan;
    public javax.swing.JComboBox CBKelas;
    private javax.swing.JLabel KonstAppKel;
    public javax.swing.JLabel LblFoto;
    private javax.swing.JLabel NamaAppKel;
    private javax.swing.JLabel NamaAppKel1;
    private javax.swing.JLabel SoalAppKel;
    public java.awt.TextArea TAKel;
    public javax.swing.JTextField TFKonstKel;
    public javax.swing.JTextField TFNamaKel;
    public javax.swing.JTextField TFTipeKel;
    public javax.swing.JTextField TFVarKel;
    public javax.swing.JTextField TFno;
    private javax.swing.JLabel TipeAppKel;
    private javax.swing.JLabel VarAppKel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
